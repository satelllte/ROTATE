import {ROTATE_Audio} from '../ROTATE_Audio';
import {ROTATE_Cat} from '../ROTATE_Cat';
import {
  ROTATE_ConditionCollision,
  ROTATE_ConditionDelay,
  ROTATE_ConditionDelayedCollision,
} from '../ROTATE_Condition';
import {ROTATE_Speech, ROTATE_SpeechPart} from '../ROTATE_Speech';
import {ROTATE_Levels} from '../Rotate';
import {
  Direction,
  ROTATE_BaseLevelInterface,
  Theme,
  Tiles,
} from './ROTATE_BaseLevelInterface';

export class ROTATE_Level7 implements ROTATE_BaseLevelInterface {
  startDir: Direction;
  finishRow: number;
  finishCol: number;
  startRow: number;
  startCol: number;
  tiles: Tiles;
  theme: Theme;
  speech?: ROTATE_Speech;
  cat?: ROTATE_Cat;

  constructor() {
    this.startDir = 1;
    this.finishRow = 24;
    this.finishCol = 17;
    this.startRow = 27;
    this.startCol = 3;
    this.tiles = [
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [4, 1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [4, 1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [4, 1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [5, 3],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [5, 3],
        [1],
        [1],
        [10],
        [1],
        [0],
        [0],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [5, 3],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [5, 3],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [5, 3],
        [1],
        [1],
        [1],
        [3, 2],
        [0],
        [0],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [5, 3],
        [1],
        [1],
        [3, 2],
        [0],
        [0],
        [0],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [5],
        [5],
        [5],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [4],
        [4],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [5, 1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [5, 3],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [5, 1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [5, 3],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [5, 1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [5, 3],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [5, 1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [5, 3],
        [1],
        [1],
      ],
      [
        [10],
        [1],
        [5, 1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [0],
        [0],
        [5, 3],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [5, 3],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [5, 3],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [5, 3],
        [1],
        [10],
      ],
      [
        [1],
        [3, 2],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [7, -1],
        [7, 7],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
    ];
    this.theme = 0;
  }

  start(): void {
    this.speech = new ROTATE_Speech([
      new ROTATE_SpeechPart(
        new ROTATE_ConditionDelayedCollision(0.75, 5, 25, 1, 3),
        'Oh... the cat.',
      ),
      new ROTATE_SpeechPart(
        new ROTATE_ConditionDelay(3),
        'My biggest mistake.',
      ),
      new ROTATE_SpeechPart(
        new ROTATE_ConditionDelayedCollision(2, 8, 1, 1, 7, 3),
        'It is constantly interfering.',
      ),
    ]);
    this.cat = new ROTATE_Cat(
      14,
      24,
      -1,
      1,
      new ROTATE_ConditionCollision(13, 1, 1, 4),
    );
    ROTATE_Audio.cat.volume(0.25);
  }

  tick(): void {}

  update(): void {
    this.speech?.update();
    this.cat?.update();
  }

  finished(): void {
    return ROTATE_Levels.level8;
  }

  kill(): void {}
}
