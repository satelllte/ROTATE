import {ROTATE_Cat} from '../ROTATE_Cat';
import {
  ROTATE_ConditionChannel,
  ROTATE_ConditionCollision,
  ROTATE_ConditionDelay,
  ROTATE_ConditionDelayedCollision,
} from '../ROTATE_Condition';
import {ROTATE_Speech, ROTATE_SpeechPart} from '../ROTATE_Speech';
import {ROTATE_Levels} from '../Rotate';
import {
  Direction,
  ROTATE_BaseLevelInterface,
  Theme,
  Tiles,
} from './ROTATE_BaseLevelInterface';

export class ROTATE_Level13 implements ROTATE_BaseLevelInterface {
  startDir: Direction;
  finishRow: number;
  finishCol: number;
  startRow: number;
  startCol: number;
  tiles: Tiles;
  theme: Theme;

  speech?: ROTATE_Speech;
  cat?: ROTATE_Cat;

  constructor() {
    this.startDir = 1;
    this.finishRow = 21;
    this.finishCol = 14;
    this.startRow = 23;
    this.startCol = 2;
    this.tiles = [
      [
        [1],
        [1],
        [1],
        [1],
        [5, 2],
        [5, 2],
        [5, 2],
        [6],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [6, 3],
        [6, 2],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [0],
        [8, 2],
        [0],
        [0],
        [5, 3],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [5, 3],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [9, 1, 4],
        [9, 1],
        [9, 1],
        [9, 1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [5, 1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [5, 1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [5, 2],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [5, 1],
        [0],
        [0],
        [0],
        [4],
        [4],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [10],
        [10],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [5, 1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [11],
        [11, 1],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [5, 1],
        [0],
        [4],
        [0],
        [0],
        [0],
        [0],
        [0],
        [11, 3],
        [11, 2],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [6],
        [1],
      ],
      [
        [1],
        [1],
        [5, 1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [8, 1],
        [0],
        [6, 3],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [6],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [5],
        [5],
        [5],
        [6, 3],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [6, 1],
        [6, 3],
        [6, 2],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [6, 3],
        [6, 2],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [2],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [2],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [9, 0, 3],
        [9],
        [9],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [7, -2],
        [7, 13],
        [1],
        [1],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [9, 2, 3, 1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [9, 0, 3, 1],
        [5, 3],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [9, 2],
        [0],
        [0],
        [0],
        [0],
        [0],
        [9],
        [5, 3],
        [1],
        [1],
      ],
      [
        [5, 1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [9, 2],
        [0],
        [0],
        [0],
        [0],
        [0],
        [9],
        [5, 3],
        [1],
        [10],
      ],
      [
        [5, 1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [5, 1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [6],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [1],
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [8],
        [0],
        [6, 3],
        [6, 2],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [3, 2],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [6],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [0],
        [11],
        [11, 1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [6, 3],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [0],
        [11, 3],
        [11, 2],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [6],
        [6, 1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [0],
        [6, 3],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
      [
        [1],
        [1],
        [5],
        [5],
        [5],
        [5],
        [5],
        [5],
        [5],
        [5],
        [5],
        [5],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
        [1],
      ],
    ];
    this.theme = 1;
  }

  start(): void {
    this.speech = new ROTATE_Speech([
      new ROTATE_SpeechPart(
        new ROTATE_ConditionDelay(2),
        'This has happened before.',
      ),
      new ROTATE_SpeechPart(
        new ROTATE_ConditionDelay(4.5),
        'It tried to lure the others away.',
      ),
      new ROTATE_SpeechPart(
        new ROTATE_ConditionDelayedCollision(1, 13, 9, 1, 3),
        'But they listened to reason.',
      ),
      new ROTATE_SpeechPart(
        new ROTATE_ConditionDelay(7),
        'They came back to join me.',
      ),
      new ROTATE_SpeechPart(new ROTATE_ConditionChannel(0), ''),
      new ROTATE_SpeechPart(
        new ROTATE_ConditionDelay(0.75),
        'I expected better from you.',
      ),
    ]);
    this.cat = new ROTATE_Cat(
      12,
      21,
      -1,
      1,
      new ROTATE_ConditionCollision(10, 19, 6, 3, 1),
    );
  }

  tick(): void {}

  update(): void {
    this.speech?.update();
    this.cat?.update();
  }

  finished(): void {
    return ROTATE_Levels.level14;
  }
  kill(): void {}
}
